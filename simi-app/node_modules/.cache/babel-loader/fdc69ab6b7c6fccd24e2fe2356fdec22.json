{"ast":null,"code":"import { signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut, sendEmailVerification } from \"firebase/auth\";\nimport { query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\nimport { auth, db, googleProvider } from \"../utils/firebase\";\n\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"id\", \"==\", user.id));\n    const docs = await getDocs(q);\n\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        id: user.id,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async value => {\n  const {\n    email,\n    password\n  } = value;\n\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async value => {\n  const {\n    email,\n    password,\n    displayName\n  } = value;\n\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      displayName,\n      email,\n      job: \"Application Developer\",\n      role: \"User\",\n      status: \"Unverified\",\n      authProvider: \"local\",\n      photoURL: 'https://firebasestorage.googleapis.com/v0/b/simi-51185.appspot.com/o/blank-profile-picture.png?alt=media&token=edc1d1d5-df02-4922-892a-35d2c36a50d5'\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nexport { signInWithGoogle, logInWithEmailAndPassword, registerWithEmailAndPassword, sendPasswordReset, logout };","map":{"version":3,"names":["signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","sendEmailVerification","query","getDocs","collection","where","addDoc","auth","db","googleProvider","signInWithGoogle","res","user","q","id","docs","length","name","displayName","authProvider","email","err","console","error","alert","message","logInWithEmailAndPassword","value","password","registerWithEmailAndPassword","uid","job","role","status","photoURL","sendPasswordReset","logout"],"sources":["/Users/macbook/Development/SIMI/simi-app/src/services/auth.js"],"sourcesContent":["import {\n    signInWithPopup,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    sendPasswordResetEmail,\n    signOut,\n    sendEmailVerification,\n} from \"firebase/auth\";\nimport { query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\nimport { auth, db, googleProvider } from \"../utils/firebase\";\n\nconst signInWithGoogle = async () => {\n    try {\n        const res = await signInWithPopup(auth, googleProvider);\n        const user = res.user;\n        const q = query(collection(db, \"users\"), where(\"id\", \"==\", user.id));\n        const docs = await getDocs(q);\n        if (docs.docs.length === 0) {\n            await addDoc(collection(db, \"users\"), {\n                id: user.id,\n                name: user.displayName,\n                authProvider: \"google\",\n                email: user.email,\n            });\n        }\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst logInWithEmailAndPassword = async (value) => {\n    const { email, password } = value\n    try {\n        await signInWithEmailAndPassword(auth, email, password);\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst registerWithEmailAndPassword = async (value) => {\n    const { email, password, displayName } = value\n    try {\n        const res = await createUserWithEmailAndPassword(auth, email, password);\n        const user = res.user;\n        await addDoc(collection(db, \"users\"), {\n            uid: user.uid,\n            displayName,\n            email,\n            job:\"Application Developer\",\n            role:\"User\",\n            status:\"Unverified\",\n            authProvider: \"local\",\n            photoURL: 'https://firebasestorage.googleapis.com/v0/b/simi-51185.appspot.com/o/blank-profile-picture.png?alt=media&token=edc1d1d5-df02-4922-892a-35d2c36a50d5',\n        });\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst sendPasswordReset = async (email) => {\n    try {\n        await sendPasswordResetEmail(auth, email);\n        alert(\"Password reset link sent!\");\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst logout = () => {\n    signOut(auth);\n};\n\nexport {\n    signInWithGoogle,\n    logInWithEmailAndPassword,\n    registerWithEmailAndPassword,\n    sendPasswordReset,\n    logout,\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}