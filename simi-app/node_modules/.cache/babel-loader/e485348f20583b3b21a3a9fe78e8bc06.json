{"ast":null,"code":"import { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\nexport const assetsServices = {\n  // Get a reference to the cities collection\n  async getITAssetUnarchive() {\n    const col = collection(db, 'assets');\n    const q1 = query(col, where('category', '==', 'Laptop'));\n    const q2 = query(col, where('archived', '==', false));\n    const snapshot = await getDocs(q1, q2);\n    const list = snapshot.docs.map(doc => doc.data());\n    return list;\n  },\n\n  async getITAssetArchive() {\n    const col = collection(db, 'assets');\n    const q1 = query(col, where('category', '==', 'Laptop'));\n    const q2 = query(col, where('archived', '==', true));\n    const snapshot = await getDocs(q1, q2);\n    const list = snapshot.docs.map(doc => doc.data());\n    return list;\n  },\n\n  async getNonITAsset() {\n    const col = collection(db, 'assets');\n    const q = query(col, where('category', '==', 'Printer'));\n    const snapshot = await getDocs(q);\n    const list = snapshot.docs.map(doc => doc.data());\n    return list;\n  },\n\n  // Get a list of assets from database\n  async getAll() {\n    const col = collection(db, 'assets');\n    const q = query(col, where('category', '==', 'Laptop'));\n    const get = await getDocs(q);\n    const list = get.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }));\n    return list;\n  },\n\n  // Create a list of assets from database\n  async create(value) {\n    const col = collection(db, 'assets');\n    const add = await addDoc(col, value);\n    return add;\n  },\n\n  // Update a list of assets from database\n  async update(id, value) {\n    const col = collection(db, 'assets');\n    const edit = await updateDoc(doc(col, id), value);\n    return edit;\n  },\n\n  // Delete a list of assets from database\n  async delete(id) {\n    const col = collection(db, 'assets');\n    const remove = await deleteDoc(doc(col, id));\n    return remove;\n  }\n\n};","map":{"version":3,"names":["collection","getDocs","query","where","db","assetsServices","getITAssetUnarchive","col","q1","q2","snapshot","list","docs","map","doc","data","getITAssetArchive","getNonITAsset","q","getAll","get","id","create","value","add","addDoc","update","edit","updateDoc","delete","remove","deleteDoc"],"sources":["/Users/macbook/Development/SIMI/simi-app/src/services/assets.js"],"sourcesContent":["import { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\n\nexport const assetsServices = {\n    // Get a reference to the cities collection\n    async getITAssetUnarchive() {\n        const col = collection(db, 'assets');\n        const q1 = query(col, where('category', '==', 'Laptop'))\n        const q2 = query(col, where('archived', '==', false))\n        const snapshot = await getDocs(q1, q2);\n        const list = snapshot.docs.map(doc => doc.data());\n        return list;\n    },\n    async getITAssetArchive() {\n        const col = collection(db, 'assets');\n        const q1 = query(col, where('category', '==', 'Laptop'))\n        const q2 = query(col, where('archived', '==', true))\n        const snapshot = await getDocs(q1, q2);\n        const list = snapshot.docs.map(doc => doc.data());\n        return list;\n    },\n    \n    async getNonITAsset() {\n        const col = collection(db, 'assets');\n        const q = query(col, where('category', '==', 'Printer'))\n        const snapshot = await getDocs(q);\n        const list = snapshot.docs.map(doc => doc.data());\n        return list;\n    },\n\n    // Get a list of assets from database\n    async getAll() {\n        const col = collection(db, 'assets');\n        const q = query(col, where('category', '==', 'Laptop'))\n        const get = await getDocs(q);\n        const list = get.docs.map(doc => ({\n            id: doc.id,\n            data: doc.data()\n        }));\n        return list;\n    },\n\n    // Create a list of assets from database\n    async create(value) {\n        const col = collection(db, 'assets');\n        const add = await addDoc(col, value);\n        return add;\n    },\n\n    // Update a list of assets from database\n    async update(id, value) {\n        const col = collection(db, 'assets')\n        const edit = await updateDoc(doc(col, id), value);\n        return edit;\n    },\n\n    // Delete a list of assets from database\n    async delete(id) {\n        const col = collection(db, 'assets')\n        const remove = await deleteDoc(doc(col, id));\n        return remove;\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}