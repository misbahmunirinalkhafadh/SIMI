{"ast":null,"code":"import { addDoc, collection, deleteDoc, doc, getDoc, getDocs, query, updateDoc, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\nexport const assetsServices = {\n  // Get a reference to the cities collection\n  async getITAssetUnarchive() {\n    const col = collection(db, 'assets');\n    const q1 = query(col, where('category', '==', 'Laptop'));\n    const q2 = query(col, where('archived', '==', false));\n    const snapshot = await getDocs(q1, q2);\n    const list = snapshot.docs.map(doc => doc.data());\n    return list;\n  },\n\n  async getITAssetArchive() {\n    const col = collection(db, 'assets');\n    const q1 = query(col, where('category', '==', 'Laptop'));\n    const q2 = query(col, where('archived', '==', true));\n    const snapshot = await getDocs(q1, q2);\n    const list = snapshot.docs.map(doc => doc.data());\n    return list;\n  },\n\n  async getNonITAsset() {\n    const col = collection(db, 'assets');\n    const q = query(col, where('category', '==', 'Printer'));\n    const snapshot = await getDocs(q);\n    const list = snapshot.docs.map(doc => doc.data());\n    return list;\n  },\n\n  // Get a list of assets from database\n  async getAllITAsset() {\n    const col = collection(db, 'assets');\n    const q = query(col, where('category', 'in', ['Laptop', 'Desktop', 'Printer']));\n    const get = await getDocs(q);\n    const list = get.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }));\n    return list;\n  },\n\n  // Get a list of assets from database\n  async getAllNonITAsset() {\n    const col = collection(db, 'assets');\n    const q = query(col, where('category', 'in', ['Projector', 'Scanner']));\n    const get = await getDocs(q);\n    const list = get.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }));\n    return list;\n  },\n\n  // Get by Id of roles from database\n  async getById(id) {\n    const col = doc(db, 'assets', id);\n    const get = await getDoc(col);\n    const data = get.data();\n    return data;\n  },\n\n  // Add a list of assets from database\n  async add(value) {\n    const col = collection(db, 'assets');\n    const create = await addDoc(col, value);\n    return create;\n  },\n\n  // Update a list of assets from database\n  async update(id, value) {\n    const col = collection(db, 'assets');\n    const edit = await updateDoc(doc(col, id), value);\n    return edit;\n  },\n\n  // Delete a list of assets from database\n  async delete(id) {\n    const col = collection(db, 'assets');\n    const remove = await deleteDoc(doc(col, id));\n    return remove;\n  }\n\n};","map":{"version":3,"names":["addDoc","collection","deleteDoc","doc","getDoc","getDocs","query","updateDoc","where","db","assetsServices","getITAssetUnarchive","col","q1","q2","snapshot","list","docs","map","data","getITAssetArchive","getNonITAsset","q","getAllITAsset","get","id","getAllNonITAsset","getById","add","value","create","update","edit","delete","remove"],"sources":["/Users/macbook/Development/SIMI/simi-app/src/services/assets.js"],"sourcesContent":["import { addDoc, collection, deleteDoc, doc, getDoc, getDocs, query, updateDoc, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\n\nexport const assetsServices = {\n    // Get a reference to the cities collection\n    async getITAssetUnarchive() {\n        const col = collection(db, 'assets');\n        const q1 = query(col, where('category', '==', 'Laptop'))\n        const q2 = query(col, where('archived', '==', false))\n        const snapshot = await getDocs(q1, q2);\n        const list = snapshot.docs.map(doc => doc.data());\n        return list;\n    },\n    async getITAssetArchive() {\n        const col = collection(db, 'assets');\n        const q1 = query(col, where('category', '==', 'Laptop'))\n        const q2 = query(col, where('archived', '==', true))\n        const snapshot = await getDocs(q1, q2);\n        const list = snapshot.docs.map(doc => doc.data());\n        return list;\n    },\n\n    async getNonITAsset() {\n        const col = collection(db, 'assets');\n        const q = query(col, where('category', '==', 'Printer'))\n        const snapshot = await getDocs(q);\n        const list = snapshot.docs.map(doc => doc.data());\n        return list;\n    },\n\n    // Get a list of assets from database\n    async getAllITAsset() {\n        const col = collection(db, 'assets');\n        const q = query(col, where('category', 'in', ['Laptop', 'Desktop', 'Printer']))\n        const get = await getDocs(q);\n        const list = get.docs.map(doc => ({\n            id: doc.id,\n            data: doc.data()\n        }));\n        return list;\n    },\n\n    // Get a list of assets from database\n    async getAllNonITAsset() {\n        const col = collection(db, 'assets');\n        const q = query(col, where('category', 'in', ['Projector', 'Scanner']))\n        const get = await getDocs(q);\n        const list = get.docs.map(doc => ({\n            id: doc.id,\n            data: doc.data()\n        }));\n        return list;\n    },\n\n    // Get by Id of roles from database\n    async getById(id) {\n        const col = doc(db, 'assets', id);\n        const get = await getDoc(col);\n        const data = get.data();\n        return data;\n    },\n\n    // Add a list of assets from database\n    async add(value) {\n        const col = collection(db, 'assets');\n        const create = await addDoc(col, value);\n        return create;\n    },\n\n    // Update a list of assets from database\n    async update(id, value) {\n        const col = collection(db, 'assets')\n        const edit = await updateDoc(doc(col, id), value);\n        return edit;\n    },\n\n    // Delete a list of assets from database\n    async delete(id) {\n        const col = collection(db, 'assets')\n        const remove = await deleteDoc(doc(col, id));\n        return remove;\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}