{"ast":null,"code":"import { addDoc, collection, deleteDoc, doc, getDoc, getDocs, orderBy, query, setDoc, updateDoc, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\nexport const assetsServices = {\n  // Get a reference to the cities collection\n  // async getITAssetUnarchive() {\n  //     const col = collection(db, 'assets');\n  //     const q1 = query(col, where('category', '==', 'Laptop'))\n  //     const q2 = query(col, where('archived', '==', false))\n  //     const snapshot = await getDocs(q1, q2);\n  //     const list = snapshot.docs.map(doc => doc.data());\n  //     return list;\n  // },\n  // async getITAssetArchive() {\n  //     const col = collection(db, 'assets');\n  //     const q1 = query(col, where('category', '==', 'Laptop'))\n  //     const q2 = query(col, where('archived', '==', true))\n  //     const snapshot = await getDocs(q1, q2);\n  //     const list = snapshot.docs.map(doc => doc.data());\n  //     return list;\n  // },\n  // async getNonITAsset() {\n  //     const col = collection(db, 'assets');\n  //     const q = query(col, where('category', '==', 'Printer'))\n  //     const snapshot = await getDocs(q);\n  //     const list = snapshot.docs.map(doc => doc.data());\n  //     return list;\n  // },\n  // Get a list of assets from database\n  async getAllITAsset() {\n    const col = collection(db, 'assets');\n    const q = query(col, where('category', 'in', ['Laptop', 'Desktop']));\n    const get = await getDocs(q);\n    const list = get.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }));\n    return list;\n  },\n\n  // Get a list of assets from database\n  async getAllNonITAsset() {\n    const col = collection(db, 'assets');\n    const q = query(col, where('category', 'in', ['Projector', 'Printer']));\n    const get = await getDocs(q);\n    const list = get.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }));\n    return list;\n  },\n\n  // Get by Id of roles from database\n  async getById(id) {\n    const col = doc(db, 'assets', id);\n    const get = await getDoc(col);\n    const data = get.data();\n    return data;\n  },\n\n  // Add a list of assets from database\n  async add(value) {\n    const col = collection(db, 'assets');\n    const create = await addDoc(col, value);\n    return create;\n  },\n\n  // Update a list of assets from database\n  async update(id, value) {\n    const col = collection(db, 'assets');\n    const edit = await updateDoc(doc(col, id), value);\n    return edit;\n  },\n\n  // Set a list of assets from database\n  async setData(id, value) {\n    const col = collection(db, 'assets');\n    const edit = await setDoc(doc(col, id), value);\n    return edit;\n  },\n\n  // Delete a list of assets from database\n  async delete(id) {\n    const col = collection(db, 'assets');\n    const remove = await deleteDoc(doc(col, id));\n    return remove;\n  }\n\n};","map":{"version":3,"names":["addDoc","collection","deleteDoc","doc","getDoc","getDocs","orderBy","query","setDoc","updateDoc","where","db","assetsServices","getAllITAsset","col","q","get","list","docs","map","id","data","getAllNonITAsset","getById","add","value","create","update","edit","setData","delete","remove"],"sources":["/Users/macbook/Development/SIMI/simi-app/src/services/assets.js"],"sourcesContent":["import { addDoc, collection, deleteDoc, doc, getDoc, getDocs, orderBy, query, setDoc, updateDoc, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\n\nexport const assetsServices = {\n    // Get a reference to the cities collection\n    // async getITAssetUnarchive() {\n    //     const col = collection(db, 'assets');\n    //     const q1 = query(col, where('category', '==', 'Laptop'))\n    //     const q2 = query(col, where('archived', '==', false))\n    //     const snapshot = await getDocs(q1, q2);\n    //     const list = snapshot.docs.map(doc => doc.data());\n    //     return list;\n    // },\n    // async getITAssetArchive() {\n    //     const col = collection(db, 'assets');\n    //     const q1 = query(col, where('category', '==', 'Laptop'))\n    //     const q2 = query(col, where('archived', '==', true))\n    //     const snapshot = await getDocs(q1, q2);\n    //     const list = snapshot.docs.map(doc => doc.data());\n    //     return list;\n    // },\n\n    // async getNonITAsset() {\n    //     const col = collection(db, 'assets');\n    //     const q = query(col, where('category', '==', 'Printer'))\n    //     const snapshot = await getDocs(q);\n    //     const list = snapshot.docs.map(doc => doc.data());\n    //     return list;\n    // },\n\n    // Get a list of assets from database\n    async getAllITAsset() {\n        const col = collection(db, 'assets');\n        const q = query(col, where('category', 'in', ['Laptop', 'Desktop']))\n        const get = await getDocs(q);\n        const list = get.docs.map(doc => ({\n            id: doc.id,\n            data: doc.data()\n        }));\n        return list;\n    },\n\n    // Get a list of assets from database\n    async getAllNonITAsset() {\n        const col = collection(db, 'assets');\n        const q = query(col, where('category', 'in', ['Projector', 'Printer']))\n        const get = await getDocs(q);\n        const list = get.docs.map(doc => ({\n            id: doc.id,\n            data: doc.data()\n        }));\n        return list;\n    },\n\n    // Get by Id of roles from database\n    async getById(id) {\n        const col = doc(db, 'assets', id);\n        const get = await getDoc(col);\n        const data = get.data();\n        return data;\n    },\n\n    // Add a list of assets from database\n    async add(value) {\n        const col = collection(db, 'assets');\n        const create = await addDoc(col, value);\n        return create;\n    },\n\n    // Update a list of assets from database\n    async update(id, value) {\n        const col = collection(db, 'assets')\n        const edit = await updateDoc(doc(col, id), value);\n        return edit;\n    },\n\n    // Set a list of assets from database\n    async setData(id, value) {\n        const col = collection(db, 'assets')\n        const edit = await setDoc(doc(col, id), value);\n        return edit;\n    },\n\n    // Delete a list of assets from database\n    async delete(id) {\n        const col = collection(db, 'assets')\n        const remove = await deleteDoc(doc(col, id));\n        return remove;\n    }\n}"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,EAAwCC,GAAxC,EAA6CC,MAA7C,EAAqDC,OAArD,EAA8DC,OAA9D,EAAuEC,KAAvE,EAA8EC,MAA9E,EAAsFC,SAAtF,EAAiGC,KAAjG,QAA8G,oBAA9G;AACA,SAASC,EAAT,QAAmB,mBAAnB;AAEA,OAAO,MAAMC,cAAc,GAAG;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA,MAAMC,aAAN,GAAsB;IAClB,MAAMC,GAAG,GAAGb,UAAU,CAACU,EAAD,EAAK,QAAL,CAAtB;IACA,MAAMI,CAAC,GAAGR,KAAK,CAACO,GAAD,EAAMJ,KAAK,CAAC,UAAD,EAAa,IAAb,EAAmB,CAAC,QAAD,EAAW,SAAX,CAAnB,CAAX,CAAf;IACA,MAAMM,GAAG,GAAG,MAAMX,OAAO,CAACU,CAAD,CAAzB;IACA,MAAME,IAAI,GAAGD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAahB,GAAG,KAAK;MAC9BiB,EAAE,EAAEjB,GAAG,CAACiB,EADsB;MAE9BC,IAAI,EAAElB,GAAG,CAACkB,IAAJ;IAFwB,CAAL,CAAhB,CAAb;IAIA,OAAOJ,IAAP;EACH,CArCyB;;EAuC1B;EACA,MAAMK,gBAAN,GAAyB;IACrB,MAAMR,GAAG,GAAGb,UAAU,CAACU,EAAD,EAAK,QAAL,CAAtB;IACA,MAAMI,CAAC,GAAGR,KAAK,CAACO,GAAD,EAAMJ,KAAK,CAAC,UAAD,EAAa,IAAb,EAAmB,CAAC,WAAD,EAAc,SAAd,CAAnB,CAAX,CAAf;IACA,MAAMM,GAAG,GAAG,MAAMX,OAAO,CAACU,CAAD,CAAzB;IACA,MAAME,IAAI,GAAGD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAahB,GAAG,KAAK;MAC9BiB,EAAE,EAAEjB,GAAG,CAACiB,EADsB;MAE9BC,IAAI,EAAElB,GAAG,CAACkB,IAAJ;IAFwB,CAAL,CAAhB,CAAb;IAIA,OAAOJ,IAAP;EACH,CAjDyB;;EAmD1B;EACA,MAAMM,OAAN,CAAcH,EAAd,EAAkB;IACd,MAAMN,GAAG,GAAGX,GAAG,CAACQ,EAAD,EAAK,QAAL,EAAeS,EAAf,CAAf;IACA,MAAMJ,GAAG,GAAG,MAAMZ,MAAM,CAACU,GAAD,CAAxB;IACA,MAAMO,IAAI,GAAGL,GAAG,CAACK,IAAJ,EAAb;IACA,OAAOA,IAAP;EACH,CAzDyB;;EA2D1B;EACA,MAAMG,GAAN,CAAUC,KAAV,EAAiB;IACb,MAAMX,GAAG,GAAGb,UAAU,CAACU,EAAD,EAAK,QAAL,CAAtB;IACA,MAAMe,MAAM,GAAG,MAAM1B,MAAM,CAACc,GAAD,EAAMW,KAAN,CAA3B;IACA,OAAOC,MAAP;EACH,CAhEyB;;EAkE1B;EACA,MAAMC,MAAN,CAAaP,EAAb,EAAiBK,KAAjB,EAAwB;IACpB,MAAMX,GAAG,GAAGb,UAAU,CAACU,EAAD,EAAK,QAAL,CAAtB;IACA,MAAMiB,IAAI,GAAG,MAAMnB,SAAS,CAACN,GAAG,CAACW,GAAD,EAAMM,EAAN,CAAJ,EAAeK,KAAf,CAA5B;IACA,OAAOG,IAAP;EACH,CAvEyB;;EAyE1B;EACA,MAAMC,OAAN,CAAcT,EAAd,EAAkBK,KAAlB,EAAyB;IACrB,MAAMX,GAAG,GAAGb,UAAU,CAACU,EAAD,EAAK,QAAL,CAAtB;IACA,MAAMiB,IAAI,GAAG,MAAMpB,MAAM,CAACL,GAAG,CAACW,GAAD,EAAMM,EAAN,CAAJ,EAAeK,KAAf,CAAzB;IACA,OAAOG,IAAP;EACH,CA9EyB;;EAgF1B;EACA,MAAME,MAAN,CAAaV,EAAb,EAAiB;IACb,MAAMN,GAAG,GAAGb,UAAU,CAACU,EAAD,EAAK,QAAL,CAAtB;IACA,MAAMoB,MAAM,GAAG,MAAM7B,SAAS,CAACC,GAAG,CAACW,GAAD,EAAMM,EAAN,CAAJ,CAA9B;IACA,OAAOW,MAAP;EACH;;AArFyB,CAAvB"},"metadata":{},"sourceType":"module"}