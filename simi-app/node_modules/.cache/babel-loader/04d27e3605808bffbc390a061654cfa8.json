{"ast":null,"code":"import { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\nexport const assetsServices = {\n  // Get a reference to the cities collection\n  async getITAssetUnarchive() {\n    const col = collection(db, 'assets');\n    const q1 = query(col, where('category', '==', 'Laptop'));\n    const q2 = query(q1, where('archived', '==', false));\n    const snapshot = await getDocs(q2);\n    const list = snapshot.docs.map(doc => doc.data());\n    return list;\n  },\n\n  async getITAssetArchive() {\n    const col = collection(db, 'assets');\n    const q1 = query(col, where('category', '==', 'Laptop'));\n    const q2 = query(q1, where('archived', '==', true));\n    const snapshot = await getDocs(q2);\n    const list = snapshot.docs.map(doc => doc.data());\n    return list;\n  },\n\n  async getNonITAsset() {\n    const col = collection(db, 'assets');\n    const q = query(col, where('category', '==', 'Printer'));\n    const snapshot = await getDocs(q);\n    const list = snapshot.docs.map(doc => doc.data());\n    return list;\n  }\n\n};","map":{"version":3,"names":["collection","getDocs","query","where","db","assetsServices","getITAssetUnarchive","col","q1","q2","snapshot","list","docs","map","doc","data","getITAssetArchive","getNonITAsset","q"],"sources":["/Users/macbook/Development/SIMI/simi-app/src/services/assets.js"],"sourcesContent":["import { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\n\nexport const assetsServices = {\n    // Get a reference to the cities collection\n    async getITAssetUnarchive() {\n        const col = collection(db, 'assets');\n        const q1 = query(col, where('category', '==', 'Laptop'))\n        const q2 = query(q1, where('archived', '==', false))\n        const snapshot = await getDocs(q2);\n        const list = snapshot.docs.map(doc => doc.data());\n        return list;\n    },\n    async getITAssetArchive() {\n        const col = collection(db, 'assets');\n        const q1 = query(col, where('category', '==', 'Laptop'))\n        const q2 = query(q1, where('archived', '==', true))\n        const snapshot = await getDocs(q2);\n        const list = snapshot.docs.map(doc => doc.data());\n        return list;\n    },\n    async getNonITAsset() {\n        const col = collection(db, 'assets');\n        const q = query(col, where('category', '==', 'Printer'))\n        const snapshot = await getDocs(q);\n        const list = snapshot.docs.map(doc => doc.data());\n        return list;\n    }\n}"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,EAAT,QAAmB,mBAAnB;AAEA,OAAO,MAAMC,cAAc,GAAG;EAC1B;EACA,MAAMC,mBAAN,GAA4B;IACxB,MAAMC,GAAG,GAAGP,UAAU,CAACI,EAAD,EAAK,QAAL,CAAtB;IACA,MAAMI,EAAE,GAAGN,KAAK,CAACK,GAAD,EAAMJ,KAAK,CAAC,UAAD,EAAa,IAAb,EAAmB,QAAnB,CAAX,CAAhB;IACA,MAAMM,EAAE,GAAGP,KAAK,CAACM,EAAD,EAAKL,KAAK,CAAC,UAAD,EAAa,IAAb,EAAmB,KAAnB,CAAV,CAAhB;IACA,MAAMO,QAAQ,GAAG,MAAMT,OAAO,CAACQ,EAAD,CAA9B;IACA,MAAME,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAzB,CAAb;IACA,OAAOJ,IAAP;EACH,CATyB;;EAU1B,MAAMK,iBAAN,GAA0B;IACtB,MAAMT,GAAG,GAAGP,UAAU,CAACI,EAAD,EAAK,QAAL,CAAtB;IACA,MAAMI,EAAE,GAAGN,KAAK,CAACK,GAAD,EAAMJ,KAAK,CAAC,UAAD,EAAa,IAAb,EAAmB,QAAnB,CAAX,CAAhB;IACA,MAAMM,EAAE,GAAGP,KAAK,CAACM,EAAD,EAAKL,KAAK,CAAC,UAAD,EAAa,IAAb,EAAmB,IAAnB,CAAV,CAAhB;IACA,MAAMO,QAAQ,GAAG,MAAMT,OAAO,CAACQ,EAAD,CAA9B;IACA,MAAME,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAzB,CAAb;IACA,OAAOJ,IAAP;EACH,CAjByB;;EAkB1B,MAAMM,aAAN,GAAsB;IAClB,MAAMV,GAAG,GAAGP,UAAU,CAACI,EAAD,EAAK,QAAL,CAAtB;IACA,MAAMc,CAAC,GAAGhB,KAAK,CAACK,GAAD,EAAMJ,KAAK,CAAC,UAAD,EAAa,IAAb,EAAmB,SAAnB,CAAX,CAAf;IACA,MAAMO,QAAQ,GAAG,MAAMT,OAAO,CAACiB,CAAD,CAA9B;IACA,MAAMP,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAzB,CAAb;IACA,OAAOJ,IAAP;EACH;;AAxByB,CAAvB"},"metadata":{},"sourceType":"module"}