{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Development/SIMI/simi-app/src/pages/Manage/TableUser.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, Table, TableHeader, TableCell, TableBody, TableRow, TableFooter, TableContainer, Badge, Button, Pagination } from '@windmill/react-ui';\nimport { EditIcon, TrashIcon } from '../../assets/icons';\nimport response from '../../utils/demo/userData';\nimport { db } from './../../utils/firebase';\nimport { collection, getDocs, onSnapshot, query } from 'firebase/firestore';\nimport { usersServices } from '../../services/users'; // make a copy of the data, for the second table\n\nconst response2 = response.concat([]);\n\nfunction TableUser() {\n  // setup pages control for every table\n  const [pageTable2, setPageTable2] = useState(1); // setup data for every table\n\n  const [dataTable2, setDataTable2] = useState([]);\n  const [dataUsers, setDataUsers] = useState([]); // pagination setup\n\n  const resultsPerPage = 10;\n  const totalResults = response.length; // pagination change control\n\n  function onPageChangeTable2(p) {\n    setPageTable2(p);\n  } // // Get a list of cities from your database\n  // async function getUsers() {\n  //     const userCol = collection(db, 'cities');\n  //     const userSnapshot = await getDocs(userCol);\n  //     const userList = userSnapshot.docs.map(doc => doc.data());\n  //     return userList;\n  //     // setDataUsers(userList)\n  // }\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n\n  useEffect(() => {\n    setDataTable2(response2.slice((pageTable2 - 1) * resultsPerPage, pageTable2 * resultsPerPage)); // console.log(getUsers.fullName)\n    // getUsers()\n    // const q = query(collection(db, 'users'))\n    // onSnapshot(q, (querySnapshot) => {\n    //     setDataUsers(querySnapshot.docs.map(doc => ({\n    //         id: doc.id,\n    //         data: doc.data()\n    //     })))\n    // })\n\n    try {\n      usersServices.getAll().then(data => setDataUsers(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [pageTable2]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, \"Role\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, dataUsers.map((user, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"hidden mr-3 md:block\",\n    src: user.data.avatar,\n    alt: \"User avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 45\n    }\n  }, user.data.fullName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-xs text-gray-600 dark:text-gray-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 45\n    }\n  }, user.data.email)))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, user.data.username), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, user.data.role), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, user.data.status)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center space-x-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    layout: \"link\",\n    size: \"icon\",\n    \"aria-label\": \"Edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    className: \"w-5 h-5\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    layout: \"link\",\n    size: \"icon\",\n    \"aria-label\": \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    className: \"w-5 h-5\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 45\n    }\n  })))))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    totalResults: totalResults,\n    resultsPerPage: resultsPerPage,\n    onChange: onPageChangeTable2,\n    label: \"Table navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default TableUser;","map":{"version":3,"names":["React","useEffect","useState","Avatar","Table","TableHeader","TableCell","TableBody","TableRow","TableFooter","TableContainer","Badge","Button","Pagination","EditIcon","TrashIcon","response","db","collection","getDocs","onSnapshot","query","usersServices","response2","concat","TableUser","pageTable2","setPageTable2","dataTable2","setDataTable2","dataUsers","setDataUsers","resultsPerPage","totalResults","length","onPageChangeTable2","p","slice","getAll","then","data","error","console","log","map","user","i","avatar","fullName","email","username","role","status"],"sources":["/Users/macbook/Development/SIMI/simi-app/src/pages/Manage/TableUser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport {\n    Avatar,\n    Table,\n    TableHeader,\n    TableCell,\n    TableBody,\n    TableRow,\n    TableFooter,\n    TableContainer,\n    Badge,\n    Button,\n    Pagination,\n} from '@windmill/react-ui'\nimport { EditIcon, TrashIcon } from '../../assets/icons'\n\nimport response from '../../utils/demo/userData'\n\nimport { db } from './../../utils/firebase';\nimport { collection, getDocs, onSnapshot, query } from 'firebase/firestore';\nimport { usersServices } from '../../services/users';\n// make a copy of the data, for the second table\nconst response2 = response.concat([])\n\nfunction TableUser() {\n\n    // setup pages control for every table\n    const [pageTable2, setPageTable2] = useState(1)\n\n    // setup data for every table\n    const [dataTable2, setDataTable2] = useState([])\n\n    const [dataUsers, setDataUsers] = useState([])\n\n    // pagination setup\n    const resultsPerPage = 10\n    const totalResults = response.length\n\n    // pagination change control\n    function onPageChangeTable2(p) {\n        setPageTable2(p)\n    }\n\n    // // Get a list of cities from your database\n    // async function getUsers() {\n    //     const userCol = collection(db, 'cities');\n    //     const userSnapshot = await getDocs(userCol);\n    //     const userList = userSnapshot.docs.map(doc => doc.data());\n    //     return userList;\n    //     // setDataUsers(userList)\n    // }\n\n    // on page change, load new sliced data\n    // here you would make another server request for new data\n    useEffect(() => {\n        setDataTable2(response2.slice((pageTable2 - 1) * resultsPerPage, pageTable2 * resultsPerPage))\n        // console.log(getUsers.fullName)\n        // getUsers()\n        // const q = query(collection(db, 'users'))\n        // onSnapshot(q, (querySnapshot) => {\n        //     setDataUsers(querySnapshot.docs.map(doc => ({\n        //         id: doc.id,\n        //         data: doc.data()\n        //     })))\n        // })\n\n        try {\n            usersServices.getAll().then(data => setDataUsers(data))\n        } catch (error) {\n            console.log(error)\n        }\n\n    }, [pageTable2])\n\n    return (\n        <>\n            <TableContainer className=\"mb-8\">\n                <Table>\n                    <TableHeader>\n                        <tr>\n                            <TableCell>User</TableCell>\n                            <TableCell>Username</TableCell>\n                            <TableCell>Role</TableCell>\n                            <TableCell>Status</TableCell>\n                            <TableCell>Actions</TableCell>\n                        </tr>\n                    </TableHeader>\n                    <TableBody>\n                        {dataUsers.map((user, i) => (\n                            <TableRow key={i}>\n                                <TableCell>\n                                    <div className=\"flex items-center text-sm\">\n                                        <Avatar className=\"hidden mr-3 md:block\" src={user.data.avatar} alt=\"User avatar\" />\n                                        <div>\n                                            <p className=\"font-semibold\">{user.data.fullName}</p>\n                                            <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.data.email}</p>\n                                        </div>\n                                    </div>\n                                </TableCell>\n                                <TableCell>\n                                    {user.data.username}\n                                </TableCell>\n                                <TableCell>\n                                    {user.data.role}\n                                </TableCell>\n                                <TableCell>\n                                    <Badge type=\"success\">{user.data.status}</Badge>\n                                </TableCell>\n                                <TableCell>\n                                    <div className=\"flex items-center space-x-4\">\n                                        <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                                            <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                        </Button>\n                                        <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n                                            <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                                        </Button>\n                                    </div>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <TableFooter>\n                    <Pagination\n                        totalResults={totalResults}\n                        resultsPerPage={resultsPerPage}\n                        onChange={onPageChangeTable2}\n                        label=\"Table navigation\"\n                    />\n                </TableFooter>\n            </TableContainer>\n        </>\n    )\n}\n\nexport default TableUser"],"mappings":"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"},"metadata":{},"sourceType":"module"}