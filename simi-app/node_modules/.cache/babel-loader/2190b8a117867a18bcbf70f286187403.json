{"ast":null,"code":"import { addDoc, collection, deleteDoc, doc, getDoc, getDocs, query, updateDoc, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\nexport const usersServices = {\n  // Get a list of users from database\n  async getAll() {\n    const col = collection(db, 'users');\n    const get = await getDocs(col);\n    const list = get.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }));\n    return list;\n  },\n\n  // Get by Id of roles from database\n  async getById(id) {\n    const col = doc(db, 'users', id);\n    const get = await getDoc(col);\n    const data = get.data();\n    return data;\n  },\n\n  // Get by email of roles from database\n  async getByEmail(email) {\n    const col = doc(db, 'users');\n    const q = query(col, where('email', '==', email));\n    const get = await getDoc(q);\n    const data = get.data();\n    return data;\n  },\n\n  // Create a list of users from database\n  async add(value) {\n    const col = collection(db, 'users');\n    const create = await addDoc(col, value);\n    return create;\n  },\n\n  // Update a list of users from database\n  async update(id, value) {\n    const col = collection(db, 'users');\n    const edit = await updateDoc(doc(col, id), value);\n    return edit;\n  },\n\n  // Delete a list of users from database\n  async delete(id) {\n    const col = collection(db, 'users');\n    const remove = await deleteDoc(doc(col, id));\n    return remove;\n  }\n\n};","map":{"version":3,"names":["addDoc","collection","deleteDoc","doc","getDoc","getDocs","query","updateDoc","where","db","usersServices","getAll","col","get","list","docs","map","id","data","getById","getByEmail","email","q","add","value","create","update","edit","delete","remove"],"sources":["/Users/macbook/Development/SIMI/simi-app/src/services/users.js"],"sourcesContent":["import { addDoc, collection, deleteDoc, doc, getDoc, getDocs, query, updateDoc, where } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\n\nexport const usersServices = {\n    // Get a list of users from database\n    async getAll() {\n        const col = collection(db, 'users');\n        const get = await getDocs(col);\n        const list = get.docs.map(doc => ({\n            id: doc.id,\n            data: doc.data()\n        }));\n        return list;\n    },\n\n    // Get by Id of roles from database\n    async getById(id) {\n        const col = doc(db, 'users', id);\n        const get = await getDoc(col);\n        const data = get.data();\n        return data;\n    },\n\n    // Get by email of roles from database\n    async getByEmail(email) {\n        const col = doc(db, 'users');\n        const q = query(col, where('email', '==', email))\n        const get = await getDoc(q);\n        const data = get.data();\n        return data;\n    },\n\n    // Create a list of users from database\n    async add(value) {\n        const col = collection(db, 'users');\n        const create = await addDoc(col, value);\n        return create;\n    },\n\n    // Update a list of users from database\n    async update(id, value) {\n        const col = collection(db, 'users')\n        const edit = await updateDoc(doc(col, id), value);\n        return edit;\n    },\n\n    // Delete a list of users from database\n    async delete(id) {\n        const col = collection(db, 'users')\n        const remove = await deleteDoc(doc(col, id));\n        return remove;\n    },\n}\n\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,EAAwCC,GAAxC,EAA6CC,MAA7C,EAAqDC,OAArD,EAA8DC,KAA9D,EAAqEC,SAArE,EAAgFC,KAAhF,QAA6F,oBAA7F;AACA,SAASC,EAAT,QAAmB,mBAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG;EACzB;EACA,MAAMC,MAAN,GAAe;IACX,MAAMC,GAAG,GAAGX,UAAU,CAACQ,EAAD,EAAK,OAAL,CAAtB;IACA,MAAMI,GAAG,GAAG,MAAMR,OAAO,CAACO,GAAD,CAAzB;IACA,MAAME,IAAI,GAAGD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAab,GAAG,KAAK;MAC9Bc,EAAE,EAAEd,GAAG,CAACc,EADsB;MAE9BC,IAAI,EAAEf,GAAG,CAACe,IAAJ;IAFwB,CAAL,CAAhB,CAAb;IAIA,OAAOJ,IAAP;EACH,CAVwB;;EAYzB;EACA,MAAMK,OAAN,CAAcF,EAAd,EAAkB;IACd,MAAML,GAAG,GAAGT,GAAG,CAACM,EAAD,EAAK,OAAL,EAAcQ,EAAd,CAAf;IACA,MAAMJ,GAAG,GAAG,MAAMT,MAAM,CAACQ,GAAD,CAAxB;IACA,MAAMM,IAAI,GAAGL,GAAG,CAACK,IAAJ,EAAb;IACA,OAAOA,IAAP;EACH,CAlBwB;;EAoBzB;EACA,MAAME,UAAN,CAAiBC,KAAjB,EAAwB;IACpB,MAAMT,GAAG,GAAGT,GAAG,CAACM,EAAD,EAAK,OAAL,CAAf;IACA,MAAMa,CAAC,GAAGhB,KAAK,CAACM,GAAD,EAAMJ,KAAK,CAAC,OAAD,EAAU,IAAV,EAAgBa,KAAhB,CAAX,CAAf;IACA,MAAMR,GAAG,GAAG,MAAMT,MAAM,CAACkB,CAAD,CAAxB;IACA,MAAMJ,IAAI,GAAGL,GAAG,CAACK,IAAJ,EAAb;IACA,OAAOA,IAAP;EACH,CA3BwB;;EA6BzB;EACA,MAAMK,GAAN,CAAUC,KAAV,EAAiB;IACb,MAAMZ,GAAG,GAAGX,UAAU,CAACQ,EAAD,EAAK,OAAL,CAAtB;IACA,MAAMgB,MAAM,GAAG,MAAMzB,MAAM,CAACY,GAAD,EAAMY,KAAN,CAA3B;IACA,OAAOC,MAAP;EACH,CAlCwB;;EAoCzB;EACA,MAAMC,MAAN,CAAaT,EAAb,EAAiBO,KAAjB,EAAwB;IACpB,MAAMZ,GAAG,GAAGX,UAAU,CAACQ,EAAD,EAAK,OAAL,CAAtB;IACA,MAAMkB,IAAI,GAAG,MAAMpB,SAAS,CAACJ,GAAG,CAACS,GAAD,EAAMK,EAAN,CAAJ,EAAeO,KAAf,CAA5B;IACA,OAAOG,IAAP;EACH,CAzCwB;;EA2CzB;EACA,MAAMC,MAAN,CAAaX,EAAb,EAAiB;IACb,MAAML,GAAG,GAAGX,UAAU,CAACQ,EAAD,EAAK,OAAL,CAAtB;IACA,MAAMoB,MAAM,GAAG,MAAM3B,SAAS,CAACC,GAAG,CAACS,GAAD,EAAMK,EAAN,CAAJ,CAA9B;IACA,OAAOY,MAAP;EACH;;AAhDwB,CAAtB"},"metadata":{},"sourceType":"module"}