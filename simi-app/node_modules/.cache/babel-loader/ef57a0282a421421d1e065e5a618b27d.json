{"ast":null,"code":"import { addDoc, collection, getDocs, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\nexport const rolesServices = {\n  // Get a list of roles from database\n  async getAll() {\n    const col = collection(db, 'roles');\n    const get = await getDocs(col);\n    const list = get.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }));\n    return list;\n  },\n\n  // Get by Id of roles from database\n  async getById(id) {\n    // const col = doc(db, 'roles', 'Lzmq3rIoTJYA30wzjI9w');\n    // const get = await getDocs(col);\n    // const data = get.docs.map(doc => doc.data());\n    // return data;\n    const docRef = doc(db, \"cities\", id);\n\n    try {\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        console.log(docSnap.data());\n      } else {\n        console.log(\"Document does not exist\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  // Add a list of roles from database\n  async add(value) {\n    const col = collection(db, 'roles');\n    const create = await addDoc(col, value);\n    return create;\n  },\n\n  // Update a list of roles from database\n  async update(id, value) {\n    const col = collection(db, 'roles');\n    const edit = await updateDoc(doc(col, id), value);\n    return edit;\n  },\n\n  // Delete a list of roles from database\n  async delete(id) {\n    const col = collection(db, 'roles');\n    const remove = await deleteDoc(doc(col, id));\n    return remove;\n  }\n\n};","map":{"version":3,"names":["addDoc","collection","getDocs","updateDoc","deleteDoc","doc","db","rolesServices","getAll","col","get","list","docs","map","id","data","getById","docRef","docSnap","getDoc","exists","console","log","error","add","value","create","update","edit","delete","remove"],"sources":["/Users/macbook/Development/SIMI/simi-app/src/services/roles.js"],"sourcesContent":["import { addDoc, collection, getDocs, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../utils/firebase\";\n\nexport const rolesServices = {\n    // Get a list of roles from database\n    async getAll() {\n        const col = collection(db, 'roles');\n        const get = await getDocs(col);\n        const list = get.docs.map(doc => ({\n            id: doc.id,\n            data: doc.data()\n        }));\n        return list;\n    },\n\n    // Get by Id of roles from database\n    async getById(id) {\n        // const col = doc(db, 'roles', 'Lzmq3rIoTJYA30wzjI9w');\n        // const get = await getDocs(col);\n        // const data = get.docs.map(doc => doc.data());\n        // return data;\n        const docRef = doc(db, \"cities\", id);\n\n        try {\n            const docSnap = await getDoc(docRef);\n            if (docSnap.exists()) {\n                console.log(docSnap.data());\n            } else {\n                console.log(\"Document does not exist\")\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    },\n\n    // Add a list of roles from database\n    async add(value) {\n        const col = collection(db, 'roles');\n        const create = await addDoc(col, value);\n        return create;\n    },\n\n    // Update a list of roles from database\n    async update(id, value) {\n        const col = collection(db, 'roles')\n        const edit = await updateDoc(doc(col, id), value);\n        return edit;\n    },\n\n    // Delete a list of roles from database\n    async delete(id) {\n        const col = collection(db, 'roles')\n        const remove = await deleteDoc(doc(col, id));\n        return remove;\n    }\n}\n\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,OAA7B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DC,GAA5D,QAAuE,oBAAvE;AACA,SAASC,EAAT,QAAmB,mBAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG;EACzB;EACA,MAAMC,MAAN,GAAe;IACX,MAAMC,GAAG,GAAGR,UAAU,CAACK,EAAD,EAAK,OAAL,CAAtB;IACA,MAAMI,GAAG,GAAG,MAAMR,OAAO,CAACO,GAAD,CAAzB;IACA,MAAME,IAAI,GAAGD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaR,GAAG,KAAK;MAC9BS,EAAE,EAAET,GAAG,CAACS,EADsB;MAE9BC,IAAI,EAAEV,GAAG,CAACU,IAAJ;IAFwB,CAAL,CAAhB,CAAb;IAIA,OAAOJ,IAAP;EACH,CAVwB;;EAYzB;EACA,MAAMK,OAAN,CAAcF,EAAd,EAAkB;IACd;IACA;IACA;IACA;IACA,MAAMG,MAAM,GAAGZ,GAAG,CAACC,EAAD,EAAK,QAAL,EAAeQ,EAAf,CAAlB;;IAEA,IAAI;MACA,MAAMI,OAAO,GAAG,MAAMC,MAAM,CAACF,MAAD,CAA5B;;MACA,IAAIC,OAAO,CAACE,MAAR,EAAJ,EAAsB;QAClBC,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACH,IAAR,EAAZ;MACH,CAFD,MAEO;QACHM,OAAO,CAACC,GAAR,CAAY,yBAAZ;MACH;IAEJ,CARD,CAQE,OAAOC,KAAP,EAAc;MACZF,OAAO,CAACC,GAAR,CAAYC,KAAZ;IACH;EACJ,CA/BwB;;EAiCzB;EACA,MAAMC,GAAN,CAAUC,KAAV,EAAiB;IACb,MAAMhB,GAAG,GAAGR,UAAU,CAACK,EAAD,EAAK,OAAL,CAAtB;IACA,MAAMoB,MAAM,GAAG,MAAM1B,MAAM,CAACS,GAAD,EAAMgB,KAAN,CAA3B;IACA,OAAOC,MAAP;EACH,CAtCwB;;EAwCzB;EACA,MAAMC,MAAN,CAAab,EAAb,EAAiBW,KAAjB,EAAwB;IACpB,MAAMhB,GAAG,GAAGR,UAAU,CAACK,EAAD,EAAK,OAAL,CAAtB;IACA,MAAMsB,IAAI,GAAG,MAAMzB,SAAS,CAACE,GAAG,CAACI,GAAD,EAAMK,EAAN,CAAJ,EAAeW,KAAf,CAA5B;IACA,OAAOG,IAAP;EACH,CA7CwB;;EA+CzB;EACA,MAAMC,MAAN,CAAaf,EAAb,EAAiB;IACb,MAAML,GAAG,GAAGR,UAAU,CAACK,EAAD,EAAK,OAAL,CAAtB;IACA,MAAMwB,MAAM,GAAG,MAAM1B,SAAS,CAACC,GAAG,CAACI,GAAD,EAAMK,EAAN,CAAJ,CAA9B;IACA,OAAOgB,MAAP;EACH;;AApDwB,CAAtB"},"metadata":{},"sourceType":"module"}